SelfDirection == 1 ~ "Observer up",
SelfDirection == 2 ~ "Observer right",
SelfDirection == 3 ~ "Observer down",
SelfDirection == 4 ~ "Observer left",
SelfDirection == 5 ~ "Observer static",
)
)
a$ObserverDirection = factor(a$ObserverDirection, levels=c('Observer up','Observer right','Observer down','Observer left', "Observer static"))
a %>%
group_by(SelfDirection,Gravity) %>%
mutate(mean_Timing = mean(Ratio_Time),
sd_Timing = sd(Ratio_Time),
mean_Space = mean(SpatialError),
sd_Space = sd(SpatialError)) %>%
select(mean_Timing,sd_Timing, mean_Space, sd_Space) %>%
slice(1)
a %>%
group_by(Gravity) %>%
mutate(mean_Timing = mean(Ratio_Time),
sd_Timing = sd(Ratio_Time),
mean_Space = mean(SpatialError),
sd_Space = sd(SpatialError)) %>%
select(mean_Timing,sd_Timing, mean_Space, sd_Space) %>%
slice(1)
a %>%
group_by(Gravity,SelfMotion) %>%
mutate(mean_Timing = mean(Ratio_Time),
sd_Timing = sd(Ratio_Time),
mean_Space = mean(SpatialError),
sd_Space = sd(SpatialError)) %>%
select(mean_Timing,sd_Timing, mean_Space, sd_Space) %>%
slice(1)
a %>%
group_by(Gravity,MotionDirection) %>%
mutate(mean_Timing = mean(Ratio_Time),
sd_Timing = sd(Ratio_Time),
mean_Space = mean(SpatialError),
sd_Space = sd(SpatialError)) %>%
select(mean_Timing,sd_Timing, mean_Space, sd_Space) %>%
slice(1)
a %>%
group_by(Gravity,SelfDirection) %>%
mutate(mean_Timing = mean(Ratio_Time),
sd_Timing = sd(Ratio_Time),
mean_Space = mean(SpatialError),
sd_Space = sd(SpatialError)) %>%
select(mean_Timing,sd_Timing, mean_Space, sd_Space) %>%
slice(1)
###Pull the whole repository. The code should work as long as the structure of the repository is not altered.
require(dplyr)
require(lme4)
require(ggplot2)
require(quickpsy)
Where_Am_I <- function(path=T){
if (path == T){
dirname(rstudioapi::getSourceEditorContext()$path)
}
else {
rstudioapi::getSourceEditorContext()$path
}
}
binomial_smooth <- function(...) {
geom_smooth(method = "glm", method.args = list(family = "binomial"), ...)}
setwd(Where_Am_I())
source("Utilities/parabolic.r")
a <- read.table(header=T,file = paste0(Where_Am_I(),"/PilotData/RA.txt"))
a$FlightDuration = abs(2*a$VerticalVelocity/9.81)
a$TemporalError = a$TemporalError - a$FlightDuration
a = a %>%
group_by(Gravity,SelfDirection) %>%
filter(abs(TemporalError) < 0.5) %>%
mutate(Ratio_Time = (TemporalError+FlightDuration)/FlightDuration,
MeanResponse_Time = mean(Ratio_Time),
SDResponse_Time = sd(SpatialError),
MeanResponse_Space = mean(SpatialError),
SDResponse_Space = sd(SpatialError))
a$Gravity
a = a %>%
mutate(ObserverDirection =
case_when(
SelfDirection == 1 ~ "Observer up",
SelfDirection == 2 ~ "Observer right",
SelfDirection == 3 ~ "Observer down",
SelfDirection == 4 ~ "Observer left",
SelfDirection == 5 ~ "Observer static",
)
)
a$ObserverDirection = factor(a$ObserverDirection, levels=c('Observer up','Observer right','Observer down','Observer left', "Observer static"))
a %>%
group_by(Gravity,SelfDirection) %>%
mutate(mean_Timing = mean(Ratio_Time),
sd_Timing = sd(Ratio_Time),
mean_Space = mean(SpatialError),
sd_Space = sd(SpatialError)) %>%
select(mean_Timing,sd_Timing, mean_Space, sd_Space) %>%
slice(1)
###Pull the whole repository. The code should work as long as the structure of the repository is not altered.
require(dplyr)
require(lme4)
require(ggplot2)
require(quickpsy)
Where_Am_I <- function(path=T){
if (path == T){
dirname(rstudioapi::getSourceEditorContext()$path)
}
else {
rstudioapi::getSourceEditorContext()$path
}
}
binomial_smooth <- function(...) {
geom_smooth(method = "glm", method.args = list(family = "binomial"), ...)}
setwd(Where_Am_I())
source("Utilities/parabolic.r")
a <- read.table(header=T,file = paste0(Where_Am_I(),"/PilotData/RA.txt"))
a$FlightDuration = abs(2*a$VerticalVelocity/9.81)
a$TemporalError = a$TemporalError - a$FlightDuration
a = a %>%
group_by(Gravity,SelfDirection) %>%
filter(abs(TemporalError) < 0.5) %>%
mutate(Ratio_Time = (TemporalError+FlightDuration)/FlightDuration,
MeanResponse_Time = mean(Ratio_Time),
SDResponse_Time = sd(SpatialError),
MeanResponse_Space = mean(SpatialError),
SDResponse_Space = sd(SpatialError))
a$Gravity
a = a %>%
mutate(ObserverDirection =
case_when(
SelfDirection == 1 ~ "Observer up",
SelfDirection == 2 ~ "Observer right",
SelfDirection == 3 ~ "Observer down",
SelfDirection == 4 ~ "Observer left",
SelfDirection == 5 ~ "Observer static",
)
)
a$ObserverDirection = factor(a$ObserverDirection, levels=c('Observer up','Observer right','Observer down','Observer left', "Observer static"))
a %>%
group_by(Gravity,SelfDirection) %>%
mutate(mean_Timing = mean(Ratio_Time),
sd_Timing = sd(Ratio_Time),
mean_Space = mean(SpatialError),
sd_Space = sd(SpatialError)) %>%
select(mean_Timing,sd_Timing, mean_Space, sd_Space) %>%
slice(1)
###Pull the whole repository. The code should work as long as the structure of the repository is not altered.
require(dplyr)
require(lme4)
require(ggplot2)
require(quickpsy)
Where_Am_I <- function(path=T){
if (path == T){
dirname(rstudioapi::getSourceEditorContext()$path)
}
else {
rstudioapi::getSourceEditorContext()$path
}
}
binomial_smooth <- function(...) {
geom_smooth(method = "glm", method.args = list(family = "binomial"), ...)}
setwd(Where_Am_I())
source("Utilities/parabolic.r")
a <- read.table(header=T,file = paste0(Where_Am_I(),"/PilotData/RA.txt"))
a$FlightDuration = abs(2*a$VerticalVelocity/9.81)
a$TemporalError = a$TemporalError - a$FlightDuration
a = a %>%
group_by(Gravity,SelfDirection) %>%
filter(TemporalError < 0.5) %>%
mutate(Ratio_Time = (TemporalError+FlightDuration)/FlightDuration,
MeanResponse_Time = mean(Ratio_Time),
SDResponse_Time = sd(SpatialError),
MeanResponse_Space = mean(SpatialError),
SDResponse_Space = sd(SpatialError))
a = a %>%
mutate(ObserverDirection =
case_when(
SelfDirection == 1 ~ "Observer up",
SelfDirection == 2 ~ "Observer right",
SelfDirection == 3 ~ "Observer down",
SelfDirection == 4 ~ "Observer left",
SelfDirection == 5 ~ "Observer static",
)
)
a %>%
group_by(Gravity,SelfDirection) %>%
mutate(mean_Timing = mean(Ratio_Time),
sd_Timing = sd(Ratio_Time),
mean_Space = mean(SpatialError),
sd_Space = sd(SpatialError)) %>%
select(mean_Timing,sd_Timing, mean_Space, sd_Space) %>%
slice(1)
a %>%
group_by(Gravity) %>%
mutate(mean_Timing = mean(Ratio_Time),
sd_Timing = sd(Ratio_Time),
mean_Space = mean(SpatialError),
sd_Space = sd(SpatialError)) %>%
select(mean_Timing,sd_Timing, mean_Space, sd_Space) %>%
slice(1)
a %>%
group_by(Gravity) %>%
mutate(mean_Timing = mean(Ratio_Time),
sd_Timing = sd(Ratio_Time),
mean_Space = mean(SpatialError),
sd_Space = sd(SpatialError)) %>%
select(mean_Timing,sd_Timing, mean_Space, sd_Space) %>%
slice(1)
###Pull the whole repository
libraries <- c("ggplot2","dplyr", "lme4", "tidyr", "data.table", "tidyverse", "cowplot", "binr", "rstan", "brms")
# Where is this script?
Where_Am_I <- function(path=T){
if (path == T){
dirname(rstudioapi::getSourceEditorContext()$path)
}
else {
rstudioapi::getSourceEditorContext()$path
}
}
#set working directory to where this file is
setwd(Where_Am_I())
#####Load Packages and Code
#####
source("Utilities/parabolic.r")
source("Utilities/functions.r")
source("Utilities/colourschemes.r")
lapply(libraries, function(x) {
if(!require(x, character.only = T, quietly = T)) {
install.packages(x)
require(x, character.only = T)
}
}
)
#optimize for fitting of Bayesian Linear Mixed Models (packages "rstan", "bmrs")
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
Sys.setenv(LOCAL_CPPFLAGS = '-march=corei7')
theme_set(theme_cowplot())
set.seed(121) #set seed because there is some randomness involved later
#####Begin data loading
b_a1 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Lisa_1.txt", header = TRUE)
b_a1$Condition <- "-1g"
b_a2 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Lisa_2.txt", header = TRUE)
b_a2$Condition <- "Different g"
b_a3 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Lisa_3.txt", header = TRUE)
b_a3$Condition <- "Different g"
b_a4 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Lisa_4.txt", header = TRUE)
b_a4$Condition <- "Different g"
b_b1 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Cristian_1.txt", header = TRUE)
b_b1$Condition <- "Different g"
b_b2 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Cristian_2.txt", header = TRUE)
b_b2$Condition <- "Different g"
b_b3 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Cristian_3.txt", header = TRUE)
b_b3$Condition <- "Different g"
b_b4 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Cristian_4.txt", header = TRUE)
b_b4$Condition <- "-1g"
b_c1 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Borja_1.txt", header = TRUE)
b_c1$Condition <- "-1g"
b_c2 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Borja_2.txt", header = TRUE)
b_c2$Condition <- "Different g"
b_c3 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Borja_3.txt", header = TRUE)
b_c3$Condition <- "Different g"
b_c4 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Borja_4.txt", header = TRUE)
b_c4$Condition <- "Different g"
b_d1 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Clara_1.txt", header = TRUE)
b_d1$Condition <- "Different g"
b_d2 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Clara_2.txt", header = TRUE)
b_d2$Condition <- "Different g"
b_d3 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Clara_3.txt", header = TRUE)
b_d3$Condition <- "Different g"
b_d4 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Clara_4.txt", header = TRUE)
b_d4$Condition <- "-1g"
b_e1 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Cristina_1.txt", header = TRUE)
b_e1$Condition <- "-1g"
b_e2 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Cristina_2.txt", header = TRUE)
b_e2$Condition <- "Different g"
b_e3 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Cristina_3.txt", header = TRUE)
b_e3$Condition <- "Different g"
b_e4 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Cristina_4.txt", header = TRUE)
b_e4$Condition <- "Different g"
b_f1 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Aniol_1.txt", header = TRUE)
b_f1$Condition <- "Different g"
b_f2 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Aniol_2.txt", header = TRUE)
b_f2$Condition <- "Different g"
b_f3 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Aniol_3.txt", header = TRUE)
b_f3$Condition <- "Different g"
b_f4 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Aniol_4.txt", header = TRUE)
b_f4$Condition <- "-1g"
b_g1 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Juan_1.txt", header = TRUE)
b_g1$Condition <- "-1g"
b_g2 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Juan_2.txt", header = TRUE)
b_g2$Condition <- "Different g"
b_g3 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Juan_3.txt", header = TRUE)
b_g3$Condition <- "Different g"
b_g4 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Juan_4.txt", header = TRUE)
b_g4$Condition <- "Different g"
b_h1 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Rodolfo_1.txt", header = TRUE)
b_h1$Condition <- "Different g"
b_h2 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Rodolfo_2.txt", header = TRUE)
b_h2$Condition <- "Different g"
b_h3 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Rodolfo_3.txt", header = TRUE)
b_h3$Condition <- "Different g"
b_h4 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Rodolfo_4.txt", header = TRUE)
b_h4$Condition <- "-1g"
b_i1 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Marco_1.txt", header = TRUE)
b_i1$Condition <- "-1g"
b_i2 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Marco_2.txt", header = TRUE)
b_i2$Condition <- "Different g"
b_i3 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Marco_3.txt", header = TRUE)
b_i3$Condition <- "Different g"
b_i4 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Marco_4.txt", header = TRUE)
b_i4$Condition <- "Different g"
b_j1 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Bjorn_1.txt", header = TRUE)
b_j1$Condition <- "Different g"
b_j2 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Bjorn_2.txt", header = TRUE)
b_j2$Condition <- "Different g"
b_j3 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Bjorn_3.txt", header = TRUE)
b_j3$Condition <- "Different g"
b_j4 <- read.table("(3) Eye-tracking and Gravity/experiment 3a/Response_Bjorn_4.txt", header = TRUE)
b_j4$Condition <- "-1g"
b_a1$block <- 1
b_a2$block <- 2
b_a3$block <- 3
b_a4$block <- 4
b_b1$block <- 1
b_b2$block <- 2
b_b3$block <- 3
b_b4$block <- 4
b_c1$block <- 1
b_c2$block <- 2
b_c3$block <- 3
b_c4$block <- 4
b_d1$block <- 1
b_d2$block <- 2
b_d3$block <- 3
b_d4$block <- 4
b_e1$block <- 1
b_e2$block <- 2
b_e3$block <- 3
b_e4$block <- 4
b_f1$block <- 1
b_f2$block <- 2
b_f3$block <- 3
b_f4$block <- 4
b_g1$block <- 1
b_g2$block <- 2
b_g3$block <- 3
b_g4$block <- 4
b_h1$block <- 1
b_h2$block <- 2
b_h3$block <- 3
b_h4$block <- 4
b_i1$block <- 1
b_i2$block <- 2
b_i3$block <- 3
b_i4$block <- 4
b_j1$block <- 1
b_j2$block <- 2
b_j3$block <- 3
b_f4$block <- 4
b_a1$id <- "s01"
b_a2$id <- "s01"
b_a3$id <- "s01"
b_a4$id <- "s01"
b_b1$id <- "s02"
b_b2$id <- "s02"
b_b3$id <- "s02"
b_b4$id <- "s02"
b_c1$id <- "s03"
b_c2$id <- "s03"
b_c3$id <- "s03"
b_c4$id <- "s03"
b_d1$id <- "s04"
b_d2$id <- "s04"
b_d3$id <- "s04"
b_d4$id <- "s04"
b_e1$id <- "s05"
b_e2$id <- "s05"
b_e3$id <- "s05"
b_e4$id <- "s05"
b_f1$id <- "s06"
b_f2$id <- "s06"
b_f3$id <- "s06"
b_f4$id <- "s06"
b_g1$id <- "s07"
b_g2$id <- "s07"
b_g3$id <- "s07"
b_g4$id <- "s07"
b_h1$id <- "s08"
b_h2$id <- "s08"
b_h3$id <- "s08"
b_h4$id <- "s08"
b_i1$id <- "s09"
b_i2$id <- "s09"
b_i3$id <- "s09"
b_i4$id <- "s09"
b_j1$id <- "s10"
b_j2$id <- "s10"
b_j3$id <- "s10"
b_j4$id <- "s10"
response_1 <- rbind(b_a1,b_a2,b_a3,b_a4)
response_2 <- rbind(b_b1,b_b2,b_b3,b_b4)
response_3 <- rbind(b_c1,b_c2,b_c3,b_c4)
response_4 <- rbind(b_d1,b_d2,b_d3,b_d4)
response_5 <- rbind(b_e1,b_e2,b_e3,b_e4)
response_6 <- rbind(b_f1,b_f2,b_f3,b_f4)
response_7 <- rbind(b_g1,b_g2,b_g3,b_g4)
response_8 <- rbind(b_h1,b_h2,b_h3,b_h4)
response_9 <- rbind(b_i1,b_i2,b_i3,b_i4)
response_10 <- rbind(b_j1,b_j2,b_j3,b_j4)
response <- rbind(response_1,response_2,response_3,response_4,response_5,response_6,response_7,response_8,response_9,
response_10)
remove(b_a1,b_a2,b_a3,b_a4,b_b1,b_b2,b_b3,b_b4,b_c1,b_c2,b_c3,b_c4,b_d1,b_d2,b_d3,b_d4,b_e1,b_e2,b_e3,b_e4,
b_f1,b_f2,b_f3,b_f4,b_g1,b_g2,b_g3,b_g4,b_i1,b_i2,b_i3,b_i4,b_j1,b_j2,b_j3,b_j4,
response_1,response_2,response_3,response_4,response_5,response_6,response_7,response_8,response_9,
response_10)
#####End data loading
#####Data preprocessing:
#delete subject s09 because they always responded way too late, not at all in line with the other subjects
ggplot(response, aes(id, TemporalError-0.049259)) + ###our projectors introduce a delay of 0.049259s which we correct for here
geom_violin() +
ylim(c(-1,1))
#(positive temporal errors = too late, and vice-versa)
#and reject all trials
#with an absolute temporal error of > 0.5s as outliers (see plot before)
a = nrow(response)
response = response[abs(response$TemporalError) < 0.5,]
b = nrow(response)
a-b
response = response[-response$TemporalError < response$OccludedTimeOfTrajectory,]
c = nrow(response)
b-c
response <- response[response$id != "s09",]
d = nrow(response)
c - d
response$g
#####Data preprocessing:
#delete subject s09 because they always responded way too late, not at all in line with the other subjects
ggplot(response[response$Condition == "-1g"], aes(id, TemporalError-0.049259),color = as.factor(g)) + ###our projectors introduce a delay of 0.049259s which we correct for here
geom_violin() +
ylim(c(-1,1)) +
#(positive temporal errors = too late, and vice-versa)
#and reject all trials
#with an absolute temporal error of > 0.5s as outliers (see plot before)
a = nrow(response)
#####Data preprocessing:
#delete subject s09 because they always responded way too late, not at all in line with the other subjects
ggplot(response[response$Condition == "-1g",], aes(id, TemporalError-0.049259),color = as.factor(g)) + ###our projectors introduce a delay of 0.049259s which we correct for here
geom_violin() +
ylim(c(-1,1)) +
#(positive temporal errors = too late, and vice-versa)
#and reject all trials
#with an absolute temporal error of > 0.5s as outliers (see plot before)
a = nrow(response)
#####Data preprocessing:
#delete subject s09 because they always responded way too late, not at all in line with the other subjects
ggplot(response[response$Condition == "-1g",], aes(id, TemporalError-0.049259),color = as.factor(g)) + ###our projectors introduce a delay of 0.049259s which we correct for here
geom_violin() +
ylim(c(-1,1))
response[response$Condition == "-1g",]
#####Data preprocessing:
#delete subject s09 because they always responded way too late, not at all in line with the other subjects
ggplot(response[response$Condition == "-1g",], aes(id, TemporalError-0.049259), color = g) + ###our projectors introduce a delay of 0.049259s which we correct for here
geom_violin() +
ylim(c(-1,1))
#####Data preprocessing:
#delete subject s09 because they always responded way too late, not at all in line with the other subjects
ggplot(response[response$Condition == "-1g",], aes(g, TemporalError-0.049259), color = id) + ###our projectors introduce a delay of 0.049259s which we correct for here
geom_violin() +
ylim(c(-1,1))
#####Data preprocessing:
#delete subject s09 because they always responded way too late, not at all in line with the other subjects
ggplot(response[response$Condition == "-1g",], aes(id, TemporalError-0.049259), color = g) + ###our projectors introduce a delay of 0.049259s which we correct for here
geom_violin() +
ylim(c(-1,1))
#####Data preprocessing:
#delete subject s09 because they always responded way too late, not at all in line with the other subjects
ggplot(response[response$Condition == "-1g",], aes(id, TemporalError-0.049259), color = as.factor(g)) + ###our projectors introduce a delay of 0.049259s which we correct for here
geom_violin() +
ylim(c(-1,1))
#####Data preprocessing:
#delete subject s09 because they always responded way too late, not at all in line with the other subjects
ggplot(response[response$Condition == "-1g",], aes(id, TemporalError-0.049259, color = as.factor(g))) + ###our projectors introduce a delay of 0.049259s which we correct for here
geom_violin() +
ylim(c(-1,1))
a
a <- read.table(header=T,file = paste0(Where_Am_I(),"/PilotData/RA.txt"))
a
a = a %>%
group_by(Gravity,SelfDirection) %>%
filter(TemporalError < 0.5) %>%
mutate(Ratio_Time = (TemporalError+FlightDuration)/FlightDuration,
MeanResponse_Time = mean(Ratio_Time),
SDResponse_Time = sd(SpatialError),
MeanResponse_Space = mean(SpatialError),
SDResponse_Space = sd(SpatialError))
a = a %>%
group_by(Gravity,SelfDirection) %>%
filter(abs(TemporalError) < 0.5) %>%
mutate(Ratio_Time = (TemporalError+FlightDuration)/FlightDuration,
MeanResponse_Time = mean(Ratio_Time),
SDResponse_Time = sd(SpatialError),
MeanResponse_Space = mean(SpatialError),
SDResponse_Space = sd(SpatialError))
a
a %>%
group_by(Gravity) %>%
mutate(mean_Timing = mean(Ratio_Time),
sd_Timing = sd(Ratio_Time),
mean_Space = mean(SpatialError),
sd_Space = sd(SpatialError)) %>%
select(mean_Timing,sd_Timing, mean_Space, sd_Space) %>%
slice(1)
View(a)
